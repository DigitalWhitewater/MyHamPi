#
# Copyright 2020 - 2022, Dave Slotter (W3DJS). All rights reserved.
#

- name: Install GridTracker
  hosts: all
  tasks:

  - name: Create directory hamradio
    file:
      path: /home/{{ ham_user }}/hamradio/
      state: directory

# 2020-09-19 - GridTracker has gone to an online documentation model
#  - name: Create directory for documentation
#    become: yes
#    file:
#      path: /usr/share/doc/gridtracker
#      state: directory
#
#  - name: Download GridTracker Documentation
#    become: yes
#    get_url:
#      url: https://www.dropbox.com/s/nmgqszm4t85mrg2/GTQS_0406.pdf?dl=1
#      dest: /usr/share/doc/gridtracker/GTQS_0406.pdf
#      validate_certs: no

  - name: Create directory for desktop files
    become: yes
    file:
      path: /usr/local/share/applications/
      state: directory

#
# Raspbian ARM
#

  - name: Determine latest version of GridTracker (ARM) on web
    shell: curl --silent "https://download.gridtracker.org/latest_release.html" | grep -Po "https:\/\/.*GridTracker-.*-linux-arm32.tar.gz\"" | uniq | head -n 1 | grep -Po "https:\/\/.*GridTracker-.*-linux-arm32.tar.gz"
    args:
      warn: no
    register: download_file
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" or ansible_architecture == "aarch64"
    retries: 5
    delay: 30
    until: download_file.failed == false

  - name: Download and Unarchive GridTracker (ARM)
    become: yes
    unarchive:
      src: "{{ download_file.stdout }}"
      dest: /usr/local
      remote_src: yes
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" or ansible_architecture == "aarch64"
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Rename GridTracker directory
    become: yes
    shell: mv /usr/local/GridTracker* /usr/local/GridTracker
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

  - name: Copy GridTracker Desktop file (ARM)
    become: yes
    copy:
      src: /usr/local/GridTracker/GridTracker.desktop
      dest: /usr/local/share/applications/GridTracker.desktop
      remote_src: yes
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

  - name: Fix the lazy path that GridTracker uses to what we're using
    become: yes
    replace:
      path: /usr/local/share/applications/GridTracker.desktop
      regexp: '\/home\/pi\/Downloads'
      replace: '/usr/local'
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

  - name: Modify categories for GridTracker.desktop
    become: yes
    lineinfile:
      path: /usr/local/share/applications/GridTracker.desktop
      regexp: '^Categories=None;'
      line: Categories=HamRadio Weak Signal
    when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" or ansible_architecture == "aarch64"

#
# Raspbian x86
#

  - name: Determine latest version of GridTracker (x86) on web
    shell: curl --silent "https://download.gridtracker.org/latest_release.html" | grep -Po "https:\/\/.*GridTracker-linux-x86-.*.tar.gz\?dl=1"
    args:
      warn: no
    register: download_file
    when: ansible_architecture == "i386"
    retries: 5
    delay: 30
    until: download_file.failed == false

  - name: Download and Unarchive GridTracker (x86)
    become: yes
    unarchive:
      src: "{{ download_file.stdout }}"
      dest: /usr/local
      remote_src: yes
    when: ansible_architecture == "i386"
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Copy GridTracker Desktop file (x86)
    become: yes
    copy:
      src: /usr/local/GridTracker/GridTracker.desktop
      dest: /usr/local/share/applications/GridTracker.desktop
      remote_src: yes
    when: ansible_architecture == "i386"

  - name: Fix the lazy path that GridTracker uses to what we're using
    become: yes
    replace:
      path: /usr/local/share/applications/GridTracker.desktop
      regexp: '~\/Downloads'
      replace: '/usr/local'
    when: ansible_architecture == "i386"

  - name: Modify categories for GridTracker.desktop
    become: yes
    lineinfile:
      path: /usr/local/share/applications/GridTracker.desktop
      regexp: '^Categories=None;'
      line: Categories=HamRadio Weak Signal
    when: ansible_architecture == "i386"

#
# AMD64
#

  - name: Determine latest version of GridTracker (AMD64) on web
    shell: curl --silent "https://download.gridtracker.org/latest_release.html" | grep -Po "https:\/\/.*GridTracker-.*-linux-x64.tar.gz\"" | uniq | head -n 1 | grep -Po "https:\/\/.*GridTracker-.*-linux-x64.tar.gz"
    args:
      warn: no
    register: download_file
    when: ansible_architecture == "x86_64" or ansible_architecture == "amd64"
    retries: 5
    delay: 30
    until: download_file.failed == false

  - name: Download and Unarchive GridTracker (AMD64)
    become: yes
    unarchive:
      src: "{{ download_file.stdout }}"
      dest: /usr/local
      remote_src: yes
    when: ansible_architecture == "x86_64" or ansible_architecture == "amd64"
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Rename GridTracker directory
    become: yes
    shell: mv /usr/local/GridTracker* /usr/local/GridTracker
    when: ansible_architecture == "x86_64" or ansible_architecture == "amd64"

#
# Common
#

  - name: Copy GridTracker Desktop file
    become: yes
    copy:
      src: /usr/local/GridTracker/GridTracker.desktop
      dest: /usr/local/share/applications/GridTracker.desktop
      remote_src: yes

  - name: Fix the lazy path that GridTracker uses to what we're using
    become: yes
    replace:
      path: /usr/local/share/applications/GridTracker.desktop
      regexp: '/home/pi/Downloads'
      replace: '/usr/local'

  - name: Modify categories for GridTracker.desktop
    become: yes
    lineinfile:
      path: /usr/local/share/applications/GridTracker.desktop
      regexp: '^Categories=None;'
      line: Categories=HamRadio Weak Signal
