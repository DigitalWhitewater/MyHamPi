#
# Copyright 2021, Dave Slotter (W3DJS). All rights reserved.
#

- name: Install SKCCLogger
  hosts: all
  gather_facts: no
  tasks:

#
# Raspberry Pi
#

  - name: Copy SKCCLogger from local file (because developer moved download behind a login) (ARM)
    copy:
      src: "{{ playbook_dir }}/../files/SKCCLogger_Linux_32-Bit-ARM.zip"
      dest: "/home/{{ ham_user }}/hamradio/SKCCLogger_Linux_32-Bit-ARM.zip"
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")

  - name: Unarchive SKCCLogger (Raspberry Pi)
    become: yes
    unarchive:
      src: "/home/{{ ham_user }}/hamradio/SKCCLogger_Linux_32-Bit-ARM.zip"
      dest: /usr/local/
      remote_src: yes
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Change Ownership of /usr/local/SKCCLogger_Linux_32-Bit-ARM to {{ ham_user }}
    become: yes
    file: dest=/usr/local/SKCCLogger_Linux_32-Bit-ARM owner={{ ham_user }} group={{ ham_user}} mode=775
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")

  - name: Change Ownership of /usr/local/SKCCLogger_Linux_32-Bit-ARM to {{ ham_user }}
    become: yes
    shell: chown -R {{ ham_user }}.{{ ham_user }} /usr/local/SKCCLogger_Linux_32-Bit-ARM
    args:
      warn: false
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")

  - name: Remove SKCCLogger from local file (ARM)
    file:
      path: "/home/{{ ham_user }}/hamradio/SKCCLogger_Linux_32-Bit-ARM.zip"
      state: absent
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")

#
# Xubuntu
#
  - name: Copy SKCCLogger from local file (because developer moved download behind a login) (Xubuntu)
    copy:
      src: "{{ playbook_dir }}/../files/SKCCLogger_Linux_64-Bit.zip"
      dest: "/home/{{ ham_user }}/hamradio/SKCCLogger_Linux_64-Bit.zip"
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")

  - name: Unarchive SKCCLogger (Xubuntu)
    become: yes
    unarchive:
      src: "/home/{{ ham_user }}/hamradio/SKCCLogger_Linux_64-Bit.zip"
      dest: /usr/local/
      remote_src: yes
    when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" and (ansible_architecture == "x86_64" or ansible_architecture == "amd64")
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Change Ownership of /usr/local/SKCCLogger_Linux_64-Bit to {{ ham_user }}
    become: yes
    file: dest=/usr/local/SKCCLogger_Linux_64-Bit owner={{ ham_user }} group={{ ham_user}} mode=775
    when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" and (ansible_architecture == "x86_64" or ansible_architecture == "amd64")

  - name: Change Ownership of /usr/local/SKCCLogger_Linux_64-Bit to {{ ham_user }}
    become: yes
    shell: chown -R {{ ham_user }}.{{ ham_user }} /usr/local/SKCCLogger_Linux_64-Bit
    args:
      warn: false
    when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" and (ansible_architecture == "x86_64" or ansible_architecture == "amd64")

  - name: Remove SKCCLogger from local file (Xubuntu)
    file:
      path: "/home/{{ ham_user }}/hamradio/SKCCLogger_Linux_64-Bit.zip"
      state: absent
    when: ansible_distribution == "Debian" and ansible_os_family == "Debian" and (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' or ansible_architecture == "aarch64")

